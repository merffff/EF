
# Задание 4

name: Deploy to Server

on:
  workflow_run:
    workflows: ["CI Tests"]
    types:
      - completed
    branches: [ main ]

env:
  DEPLOY_PATH: /var/www/html

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl
          tools: composer:v2

      - name: Install production dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction

      - name: Create production build
        run: |
          # Создаем директорию для build
          mkdir -p build
          
          # Копируем необходимые файлы (исключаем dev файлы)
          rsync -av --exclude-from='.deployignore' . build/ || cp -r . build/
          
          # Создаем .deployignore если не существует
          cat > .deployignore << EOF
          .git/
          .github/
          tests/
          node_modules/
          .env
          .env.example
          phpunit.xml
          pest.php
          composer.lock
          README.md
          .gitignore
          .deployignore
          coverage/
          coverage.xml
          test-results.xml
          EOF

      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        if: ${{ vars.DEPLOY_METHOD == 'ftp' || vars.DEPLOY_METHOD == '' }}
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT || 21 }}
          protocol: ${{ secrets.FTP_PROTOCOL || 'ftp' }}
          local-dir: ./build/
          server-dir: ${{ secrets.FTP_SERVER_DIR || '/' }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**

      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment completed successfully!"
            echo "🚀 Application deployed to production server"
          else
            echo "❌ Deployment failed!"
            echo "🔧 Please check the logs and fix the issues"
          fi

